nodejs:
    非语言、非平台、非技术
    是javascript运行时环境,基于Google chorme的v8引擎（解析js代码，同java的jvm），如同java的jdk
nodejs与浏览器中的js:
    后者只能运行在浏览器中，nodejs能离开浏览器运行
    nodejs采用基本的ecmaJs语法变成，无BOM/DOM对象，提供服务器级别的API：文件、http请求、数据库等等
nodejs采用模块化编程---第三方工具模块，最终由module.exports以及require引出,由module.js维护
    nodejs中不存在全局作用域，只有文件/模块作用域，即此模块不能直接引用其他模块定义的变量、函数等
    module.js为nodejs内核机制，为当前引入解析的每一个模块创建module对象
    使用require('')进行引入解析，同html中的<script scr = ''></script>
    为该模块创建一个module对象，其中module.exports属性被require('')方法返回，通过获取module.exports对象来进行跨文件调用
    模块分类：
            1.具名核心模块，通过模块名查找引入
                终端输入node回车进入终端调试界面，核心模块无需使用require就可以使用
            2.自定义js文件模块，文件相对路径查找

服务端和客户端渲染方式：
    客户端渲染：客户端从服务器拿到html包含js代码，客户端渲染出html页面并带空数据。执行js异步请求后台数据拿到数据再次渲染数据
        不易被爬虫抓取（SEO搜索引擎优化），即不易被搜索引擎抓取到某些数据，则页面知名度相对于搜素引擎来说下降
    服务端渲染：客户端请求服务端，服务端读取html页面，取得数据使用模板渲染html文件，将html页面返回
        如何查看是否是服务端渲染：请求html时，F12的响应结果直接返回包含数据内容。一般java tomcat为服务端渲染
        可以被爬虫抓取，提高知名度
    电商网站：普遍电商网站商品等数据信息等都是通过服务端渲染方式（查看：访问页面时，查看请求响应内容是否带有数据部分）
            一些如评论等数据信息通过客户端渲染，即Ajax异步渲染的方式进行得到，提升用户体验
    搜索引擎：
        1.页面抓取：使用B/S方式访问新文档，包括其链接网页。引擎蜘蛛向页面发起访问请求，收到服务器相应的html代码后，将html代码存入原始页面数据库(直接存储，所以异步请求数据一般无法被抓取)
            保存两份记录：已抓取页面记录，未抓取页面记录，抓取url后分析是否已抓取过，抓取过丢弃，否则抓取
        2.建立索引：为每个网页建立全索引，分析页面，建立倒排文件(反向文件)
            包括判断网页类型、衡量重要性、去重、分词、超链接分析等。最后建立索引库：文档索引和关键词索引
        3.查询：根据关键词对搜索结果排序，根据常用程度、词频和密度、位置和形式、关键词距离、链接分析和页面权重等进行展示查找内容
